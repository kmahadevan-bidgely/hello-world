name: Test Execution Flow

on:
  workflow_dispatch:
    inputs:
      test_type:
        description: 'Type of test to run'
        required: true
        default: 'simple'
        type: choice
        options:
          - simple
          - maven

jobs:
  test-execution-flow:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Simple test with failing command
        if: ${{ github.event.inputs.test_type == 'simple' }}
        run: |
          echo "Step 1: About to run a command that will fail..."
          # This command will fail with exit code 1
          false
          # Capture the exit code immediately
          EXIT_CODE=$?
          echo "Step 2: This line should execute after the failure"
          echo "Exit code from the failed command: $EXIT_CODE"
          
          # Do some work based on the failure
          if [ $EXIT_CODE -ne 0 ]; then
            echo "Step 3: Failure detected, doing some recovery work..."
            # In our workflow, this is where we identify failed modules
          fi
          
          echo "Step 4: This step will still run"
          
          # At the end, we exit with the original exit code
          # This makes the overall step fail, but only after all our commands run
          echo "Step 5: About to exit with code $EXIT_CODE"
          exit $EXIT_CODE

      - name: This step should run even if the previous step failed
        run: echo "This step ran after the failing step"

      - name: Set up JDK 11 for Maven test
        if: ${{ github.event.inputs.test_type == 'maven' }}
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Maven test with failing test
        if: ${{ github.event.inputs.test_type == 'maven' }}
        run: |
          # Create a simple Maven project with a failing test
          mkdir -p dummy/src/test/java
          
          # Create a failing test
          cat > dummy/src/test/java/FailingTest.java << 'EOF'
          import org.junit.Test;
          import static org.junit.Assert.*;
          
          public class FailingTest {
              @Test
              public void testThatFails() {
                  fail("This test is designed to fail");
              }
          }
          EOF
          
          # Create a simple pom.xml
          cat > dummy/pom.xml << 'EOF'
          <project>
              <modelVersion>4.0.0</modelVersion>
              <groupId>com.example</groupId>
              <artifactId>test-project</artifactId>
              <version>1.0-SNAPSHOT</version>
              <dependencies>
                  <dependency>
                      <groupId>junit</groupId>
                      <artifactId>junit</artifactId>
                      <version>4.13.2</version>
                      <scope>test</scope>
                  </dependency>
              </dependencies>
              <properties>
                  <maven.compiler.source>11</maven.compiler.source>
                  <maven.compiler.target>11</maven.compiler.target>
              </properties>
          </project>
          EOF
          
          echo "Step 1: About to run Maven test that will fail..."
          # This command will fail because the test is designed to fail
          cd dummy 
          mvn test -ntp
          # Capture the exit code immediately
          MAVEN_EXIT_CODE=$?
          echo "Step 2: This line should execute after Maven failure"
          echo "Exit code from Maven: $MAVEN_EXIT_CODE"
          
          # Do some work based on the failure
          if [ $MAVEN_EXIT_CODE -ne 0 ]; then
            echo "Step 3: Maven test failure detected, identifying failed tests..."
            # Find test failures
            FAILED_TESTS=$(find . -path "*/target/surefire-reports" -type d | while read -r report_dir; do
              if grep -q "<failure" "$report_dir"/*.xml 2>/dev/null; then
                echo "Found failures in $report_dir"
              fi
            done)
            echo "Failed tests: $FAILED_TESTS"
          fi
          
          echo "Step 4: This step will still run after Maven failure"
          
          # At the end, we exit with the original exit code
          echo "Step 5: About to exit with Maven exit code $MAVEN_EXIT_CODE"
          exit $MAVEN_EXIT_CODE

      - name: This step should run even if Maven failed
        run: echo "This step ran after the Maven step"
